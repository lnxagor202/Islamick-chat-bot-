module.exports.config = {
	name: "joinNoti",
	eventType: ["log:subscribe"],
	version: "1.0.1",
	credits: "ùó¶ùóµùóÆùóºùóª ùóîùóµùó∫ùó≤ùó±",
	description: "Notify bot or group member with random gif/photo/video",
	dependencies: {
		"fs-extra": "",
		"path": ""
	}
};

module.exports.onLoad = function () {
    const { existsSync, mkdirSync } = global.nodemodule["fs-extra"];
    const { join } = global.nodemodule["path"];

	const path = join(__dirname, "cache", "joinmp4");
	if (existsSync(path)) mkdirSync(path, { recursive: true });	

	const path2 = join(__dirname, "cache", "joinmp4", "join.mp4");
    if (!existsSync(path2)) mkdirSync(path2, { recursive: true });

    return;
}


module.exports.run = async function({ api, event, Users, Threads }) {
    const { join } = global.nodemodule["path"];
	const { threadID } = event;
	if (event.logMessageData.addedParticipants.some(i => i.userFbId == api.getCurrentUserID())) {
		api.changeNickname(`{  ${global.config.PREFIX}  } ${(!global.config.BOTNAME) ? "LN.XAGOR(‚ú∑‚Äø‚ú∑) ùóïùóºùòÅ ùóúùòÄ ùóïùóÆùó∞ùó∏üëø" : global.config.BOTNAME}`, threadID, api.getCurrentUserID());
return api.sendMessage(`¬ª ‚úÖùó¶ùó®ùóñùóñùóòùó¶ùó¶ùóôùó®ùóüùóüùó¨ ùóñùó¢ùó°ùó°ùóòùóñùóßùóòùóó                                            ‚ïî‚ïê‚ïê‚ïê‚ïê   ¬∞¬∞ùóüùó°.ùó´ùóîùóöùó¢ùó•¬∞¬∞    ‚ïê‚ïê‚ïê‚ïê‚ïó          ùêñùêÑùêãùêÇùêéùêåùêÑ TO BOT ENJOY ùêàùêì‚úÖ            ‚ïö‚ïê‚ïê‚ïê   ¬∞ùó¢ùóôùóôùóúùóñùóúùóîùóü¬∞    ‚ïê‚ïê‚ïê‚ïù                .       .   *  .¬∑       ‚úß ‚Ä¢  .            ‚Ä¢ ‚ú¶  . ¬∑   ‚Ä¢  .      . *                                                      ¬∑     . ¬∑ *           . ¬∑   .       * ¬∑       . ‚úß           .  .          .               .       .   *  .¬∑       ‚úß ‚Ä¢  .            ‚Ä¢ ‚ú¶  . ¬∑   ‚Ä¢  .      . *                                                      ¬∑     . ¬∑ *           . ¬∑   .       * ¬∑       . ‚úß           .  .          . .       .   *  .¬∑       ‚úß ‚Ä¢  .            ‚Ä¢ ‚ú¶  . ¬∑   ‚Ä¢  .      . *                                                      ¬∑     . ¬∑ *           . ¬∑   .       * ¬∑       . ‚úß           .  .          . .       .   *  .¬∑       ‚úß ‚Ä¢  .            ‚Ä¢ ‚ú¶  . ¬∑   ‚Ä¢  .      . *                                                      ¬∑     . ¬∑ *           . ¬∑   .       * ¬∑       . ‚úß           .  .          . .       .   *  .¬∑       ‚úß ‚Ä¢  .            ‚Ä¢ ‚ú¶  . ¬∑   ‚Ä¢  .      . *                                                      ¬∑     . ¬∑ *           . ¬∑   .       * ¬∑       . ‚úß           .  .          .  .       .   *  .¬∑       ‚úß ‚Ä¢  .            ‚Ä¢ ‚ú¶  . ¬∑   ‚Ä¢  .      . *                                                      ¬∑     . ¬∑ *           . ¬∑   .       * ¬∑       . ‚úß           .  .          ‚òÖ~‚òÖ~‚òÖ~‚òÖ~‚òÖ~‚òÖ~‚òÖ~‚òÖ~‚òÖ~‚òÖ~‚òÖ ‚Ä¢‚ïî‚ïê‚ïê‚ïê‚ïê‚óÑ‚ñë‚ùÄ‚ñë‚ùâ‚ñë‚ñë‚ñ∫‚ïê‚ïê‚ïê‚ïê‚ïó‚Ä¢            ‚ùâ‚ñë üëâ USE PERFIX / üëà‚ñë‚ùâ ‚Ä¢‚ïö‚ïê‚ïê‚ïê‚ïê‚óÑ‚ñë‚ùÄ‚ñë‚ùâ‚ñë‚ñë‚ñ∫‚ïê‚ïê‚ïê‚ïê‚ïù‚Ä¢ ‚òÖ~‚òÖ~‚òÖ~‚òÖ~‚òÖ~‚òÖ~‚òÖ~‚òÖ~‚òÖ~‚òÖ~‚òÖ     ¬ª‚úÖ‚ï≠‚îÄ‚îÄ„Ää ùóïùó¢ùóß ùóñùó¢ùó°ùó°ùóòùóñùóßùóòùóó‚îÄ‚îÄ‚ä∑
‚îÇ ‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚úß‚ùÅ‚úß‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ¬´
‚îÇ ‚îÇ Bot Name:- Ê∑∑ÂêàËØ¥Âî±
‚îÇ ‚îÇ Credit :-LN.XAGOR
‚îÇ ‚îÇ Prefix:- [/]
‚îÇ ‚îÇ Owner :LN.XAGOR.
‚îÇ ‚îÇ LN.XAGOR OFFICIAL:-"https://www.facebook.com/www.xnxx.com20
‚îÇ ‚îÇ 
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚úß‚ùÅ‚úß‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ¬ª
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ä∑‚òë ‚ùÄ‚úøüíïüåºüíï‚úø‚ùÄ                    ‚úø‚ùÄ¬∏¬∏.‚Ä¢*¬Ø‚úø¬∏.‚Ä¢ ‚ùÄ‚úøüíïüåºüíï‚úø‚ùÄ ‚úø‚ùÄ¬∏¬∏.‚Ä¢*¬Ø‚úø¬∏.‚Ä¢                  ‚òÖ „ÄÇ‚òÜ„ÄÇ‚òÖ „ÄÇ‚òÜ„ÄÇ
-\`, {${global.config.PREFIX}ùóõùó≤ùóπùóΩ} to see command`, threadID);
	}
  else {
		try {
			const { createReadStream, existsSync, mkdirSync, readdirSync } = global.nodemodule["fs-extra"];
        const moment = require("moment-timezone");
  const time = moment.tz("Asia/Dhaka").format("„ÄéDD/MM/YYYY„Äè ||„Äêhh:mm:ss„Äë"); 
const hours = moment.tz("Asia/Dhaka").format("hh");
			let { threadName, participantIDs } = await api.getThreadInfo(threadID);
			const threadData = global.data.threadData.get(parseInt(threadID)) || {};
			const path = join(__dirname, "cache", "joinGif");
			const pathGif = join(path, `${threadID}.gif`);

			var mentions = [], nameArray = [], memLength = [], i = 0;
			
			for (id in event.logMessageData.addedParticipants) {
				const userName = event.logMessageData.addedParticipants[id].fullName;
				nameArray.push(userName);
				mentions.push({ tag: userName, id });
				memLength.push(participantIDs.length - i++);
			}
			memLength.sort((a, b) => a - b);
			
			(typeof threadData.customJoin == "undefined") ? msg = "‚ïî‚ïê‚ïê‚ïê‚ïê‚Ä¢|      ‚úø      |‚Ä¢‚ïê‚ïê‚ïê‚ïê‚ïó\n üíê‡¶Ü‡ßç‡¶Å‡¶∏‡ßç‡¶Å‡¶∏‡¶æ‡ßç‡¶Å‡¶≤‡¶æ‡ßç‡¶Å‡¶Æ‡ßÅ‡ßç‡¶Åüíö‡¶Ü‡ßç‡¶Å‡¶≤‡¶æ‡ßç‡¶Å‡¶á‡ßç‡¶Å‡¶ï‡ßÅ‡ßç‡¶Å‡¶Æ‡ßç‡¶Åüíê\n‚ïö‚ïê‚ïê‚ïê‚ïê‚Ä¢|      ‚úø      |‚Ä¢‚ïê‚ïê‚ïê‚ïê‚ïù\n\n    ‚ú®üÜÜüÖ¥üÖªüÖª üÖ≤üÖæüÖºüÖ¥‚ú®\n\n                 ‚ù•ùêçùêÑùêñ~\n\n        ~üá≤‚Äåüá™‚Äåüá≤‚Äåüáß‚Äåüá™‚Äåüá∑‚Äå~\n\n             [   {name} ]\n\n‡ºÑ‚ú∫‡¶Ü‡ßç‡¶Å‡¶™‡ßç‡¶Å‡¶®‡¶æ‡ßç‡¶Å‡¶ï‡ßá‡ßç‡¶Å ‡¶Ü‡ßç‡¶Å‡¶Æ‡¶æ‡ßç‡¶Å‡¶¶‡ßá‡ßç‡¶Å‡¶∞‡ßç‡¶Å‚ú∫‡øê\n\n{threadName}\n\n ü•∞üñ§üå∏‚Äî‡¶è‡ßç‡¶Å‡¶∞‡ßç‡¶Å ‡¶™‡ßç‡¶Å‡¶ï‡ßç‡¶∑‡ßç‡¶ÅüçÄ‡¶•‡ßá‡ßç‡¶Å‡¶ï‡ßá‡ßç‡¶ÅüçÄ‚Äîüå∏ü•Ä\n\n         ü•Ä_‡¶≠‡¶æ‡ßç‡¶Å‡¶≤‡ßã‡ßç‡¶Å‡¶¨‡¶æ‡ßç‡¶Å‡¶∏‡¶æ‡ßç‡¶Å_‡¶Ö‡ßç‡¶Å‡¶≠‡¶ø‡ßç‡¶Å‡¶∞‡¶æ‡ßç‡¶Å‡¶Æ‡ßç‡¶Å_ü•Ä\n\n‡ºÑ‚ú∫‡¶Ü‡¶Å‡¶™‡¶Å‡¶®‡¶ø‡¶Å ‡¶è‡¶Å‡¶á‡¶Å ‡¶ó‡ßç‡¶∞‡ßÅ‡¶Å‡¶™‡ßá‡¶Å‡¶∞ {soThanhVien} ‡¶®‡¶Å‡¶Ç ‡¶Æ‡ßá‡ßç‡¶Å‡¶Æ‡ßç‡¶¨‡¶æ‡ßç‡¶Å‡¶∞‡¶Å ‡øê\n\n‚ïî‚ï¶‚ïê‚ïê‚Ä¢  ‚Ä¢‚ú†‚Ä¢‚ùÄ‚Ä¢‚ú†‚Ä¢  ‚Ä¢‚ïê‚ïê‚ï¶‚ïó\n‚ô•  ùêÅùêéùêì'ùê¨ ùêéùêñùêçùêÑùêë‚ô•\n\n            ‚òü                     \n\n   ü•∞ùóüùó°.ùó´ùóîùóöùó¢ùó•ü§ç\n‚ïö‚ï©‚ïê‚ïê‚Ä¢  ‚Ä¢‚ú†‚Ä¢‚ùÄ‚Ä¢‚ú†‚Ä¢  ‚Ä¢‚ïê‚ïê‚ï©\n{time}": msg = threadData.customJoin;
			msg = msg
                .replace(/\{name}/g, nameArray.join(', '))
                .replace(/\{type}/g, (memLength.length > 1) ? '‡¶Ü‡¶™‡¶®‡¶æ‡¶¶‡ßá‡¶∞' : '‡ºÑ‚ú∫‡¶Ü‡ßç‡¶Å‡¶™‡ßç‡¶Å‡¶®‡¶æ‡ßç‡¶Å‡¶ï‡ßá')
                .replace(/\{soThanhVien}/g, memLength.join(', '))
                .replace(/\{threadName}/g, threadName)
                .replace(/\{session}/g, hours <= 10 ? "‡¶∏‡¶ï‡¶æ‡¶≤" : 
    hours > 10 && hours <= 12 ? "‡¶¶‡ßÅ‡¶™‡ßÅ‡¶∞" :
    hours > 12 && hours <= 18 ? "‡¶¨‡¶ø‡¶ï‡¶æ‡¶≤" : "‡¶∞‡¶æ‡¶§‡ßç‡¶∞‡¶ø")
                .replace(/\{time}/g, time);  



			if (existsSync(path)) mkdirSync(path, { recursive: true });

			const randomPath = readdirSync(join(__dirname, "cache", "joinGif", "randomgif"));

			if (existsSync(pathGif)) formPush = { body: msg, attachment: createReadStream(pathGif), mentions }
			else if (randomPath.length != 0) {
				const pathRandom = join(__dirname, "cache", "joinGif", "randomgif", `${randomPath[Math.floor(Math.random() * randomPath.length)]}`);
				formPush = { body: msg, attachment: createReadStream(pathRandom), mentions }
			}
			else formPush = { body: msg, mentions }

			return api.sendMessage(formPush, threadID);
      
		} catch (e) { return console.log(e) };
	}
                                }
